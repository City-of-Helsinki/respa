# Generated by Django 2.1.7 on 2019-07-10 15:08

from decimal import Decimal
import django.core.validators
from django.db import migrations, models


def convert_pretax_prices_to_taxful_prices(apps, schema_editor):
    Product = apps.get_model('payments', 'Product')
    for product in Product.objects.all():
        price = product.pretax_price * (1 + product.tax_percentage / 100)
        Product.objects.filter(id=product.id).update(price=price)


def convert_taxful_prices_to_pretax_prices(apps, schema_editor):
    Product = apps.get_model('payments', 'Product')
    for product in Product.objects.all():
        pretax_price = product.price / (1 + product.tax_percentage / 100)
        Product.objects.filter(id=product.id).update(pretax_price=pretax_price)


class Migration(migrations.Migration):

    dependencies = [
        ('payments', '0016_product_max_quantity'),
    ]

    operations = [
        migrations.AddField(
            model_name='product',
            name='price',
            field=models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='price including VAT', default=Decimal('0.01')),
            preserve_default=False,
        ),
        migrations.RunPython(convert_pretax_prices_to_taxful_prices, convert_taxful_prices_to_pretax_prices),
        migrations.RemoveField(
            model_name='product',
            name='pretax_price',
        ),
    ]
