# -*- coding: utf-8 -*-
# Generated by Django 1.11.1 on 2017-06-12 14:53
from __future__ import unicode_literals

from django.db import migrations
from django.contrib.auth.management import create_permissions


def forwards_func(apps, schema_editor):
    # Assign permissions from old permission names to new ones (unit_*)
    Permission = apps.get_model('auth', 'Permission')
    Unit = apps.get_model('resources', 'Unit')

    app_config = apps.get_app_config('resources')
    app_config.models_module = True
    create_permissions(app_config, verbosity=0)
    app_config.models_module = None

    for perm_codename, _ in Unit._meta.permissions:
        if perm_codename.startswith('unit:'):
            old_codename = perm_codename[5:]
        else:
            continue
        try:
            old_perm = Permission.objects.get(
                content_type__app_label='resources',
                codename=old_codename
            )
        except Permission.DoesNotExist:
            continue
        new_perm = Permission.objects.get(
            content_type__app_label='resources',
            codename=perm_codename
        )
        old_perm.userobjectpermission_set.update(permission=new_perm)
        old_perm.groupobjectpermission_set.update(permission=new_perm)
        related_object_count, _ = old_perm.delete()
        assert related_object_count == 1


class Migration(migrations.Migration):
    dependencies = [
        ('resources', '0057_alter_permission_names'),
    ]

    operations = [
        migrations.RunPython(forwards_func)
    ]
